{"version":3,"sources":["store/reducer.js","store/index.js","store/actionTypes.js","TodoListUi.js","TodoList.js","store/actionCreators.js","index.js"],"names":["defaultState","placeholderText","menuList","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","state","action","type","newState","JSON","parse","stringify","inputValue","value","newState2","push","name","newState3","splice","index","newState4","data","TodoListUi","props","style","margin","placeholder","width","onChange","changeInputValue","onPressEnter","addMenuItem","onClick","marginLeft","header","color","footer","bordered","dataSource","renderItem","item","Item","actions","size","danger","deleteMenuItem","marginTop","TodoList","getState","bind","storeChange","subscribe","dispatch","axios","get","then","res","catch","err","console","log","this","e","target","setState","trim","message","success","warning","deleteMenuAction","Component","ReactDOM","render","document","getElementById"],"mappings":"iQAEMA,EAAe,CACnBC,gBAAiB,6CACjBC,SAAU,CAAC,qBAAO,2BAAQ,2BAAQ,6B,SCE9BC,GAFmBC,OAAOC,qCAAuCD,OAAOC,qCAAqC,IAAMC,KAEvFC,YAAgBC,MASnCC,EANDC,aDFC,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCAC/C,OAAQA,EAAOC,MACb,IETwB,cFUtB,IAAIC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAEzC,OADAG,EAASI,WAAaN,EAAOO,MACtBL,EACT,IEZoB,UFalB,IAAIM,EAAYL,KAAKC,MAAMD,KAAKE,UAAUN,IAK1C,OAJAS,EAAUlB,SAASmB,KAAK,CACtBC,KAAMF,EAAUF,aAElBE,EAAUF,WAAa,GAChBE,EACT,IElBuB,aFmBrB,IAAIG,EAAYR,KAAKC,MAAMD,KAAKE,UAAUN,IAE1C,OADAY,EAAUrB,SAASsB,OAAOZ,EAAOa,MAAO,GACjCF,EACT,IErBoB,UFsBlB,IAAIG,EAAYX,KAAKC,MAAMD,KAAKE,UAAUN,IAE1C,OADAe,EAAUxB,SAAWU,EAAOe,KACrBD,EACT,QACE,OAAOf,KClBXR,G,qDE8BayB,EArCI,SAACC,GAClB,OACE,yBAAKC,MAAO,CAAEC,OAAQ,KACpB,kBAAC,IAAD,CACEC,YAAaH,EAAM5B,gBACnB6B,MAAO,CAAEG,MAAO,SAChBC,SAAUL,EAAMM,iBAChBC,aAAcP,EAAMQ,YACpBlB,MAAOU,EAAMX,aAEf,kBAAC,IAAD,CAAQL,KAAK,UAAUyB,QAAST,EAAMQ,YAAaP,MAAO,CAAES,WAAY,QAAxE,gBACA,kBAAC,IAAD,CACEC,OAAQ,kBAAC,IAAD,CAAKC,MAAM,cAAX,SACRC,OAAQ,kBAAC,IAAD,CAAKD,MAAM,cAAX,OACRE,UAAQ,EACRC,WAAYf,EAAM3B,SAClB2C,WAAY,SAACC,EAAMrB,GAAP,OACV,kBAAC,IAAKsB,KAAN,CACEC,QAAS,CACP,kBAAC,IAAD,CACEC,KAAK,QACLC,QAAM,EACNZ,QACE,WAAQT,EAAMsB,eAAe1B,KAJjC,kBASDqB,EAAKxB,OAGVQ,MAAO,CAAEsB,UAAW,GAAInB,MAAO,SC8CxBoB,E,YAvEb,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KACDlB,MAAQF,EAAM6C,WAEnB,EAAKnB,iBAAmB,EAAKA,iBAAiBoB,KAAtB,gBACxB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKlB,YAAc,EAAKA,YAAYkB,KAAjB,gBACnB,EAAKJ,eAAiB,EAAKA,eAAeI,KAApB,gBAEtB9C,EAAMgD,UAAU,EAAKD,aATJ,E,iFAkBjB,IAAM5C,ECLD,SAAC8C,GACNC,IAAMC,IAAI,yDAAyDC,MAAK,SAAAC,GACtE,IAAMlD,EAR4B,CACtCC,KHfsB,UGgBtBc,KAMiCmC,EAAInC,KAAKA,MACtC+B,EAAS9C,MACRmD,OAAM,SAAAC,GACPC,QAAQC,IAAIF,ODCdvD,EAAMiD,SAAS9C,K,+BAGf,OACE,kBAAC,EAAD,CACEX,gBAAiBkE,KAAKxD,MAAMV,gBAC5BiB,WAAYiD,KAAKxD,MAAMO,WACvBhB,SAAUiE,KAAKxD,MAAMT,SACrBiC,iBAAkBgC,KAAKhC,iBACvBE,YAAa8B,KAAK9B,YAClBc,eAAgBgB,KAAKhB,mB,uCAKViB,GAKf,IAAMxD,EC9CmC,CAC3CC,KHJ0B,cGK1BM,MD4CmCiD,EAAEC,OAAOlD,OAC1CV,EAAMiD,SAAS9C,K,oCAIfuD,KAAKG,SAAS7D,EAAM6C,c,oCAIpB,GAAIa,KAAKxD,MAAMO,YAAciD,KAAKxD,MAAMO,WAAWqD,OAAQ,CAIzD,IAAM3D,ECtDwB,CAClCC,KHRsB,WE8DlBJ,EAAMiD,SAAS9C,GACf4D,IAAQC,QAAQ,2BAAQ,QAExBD,IAAQE,QAAQ,6CAAW,K,qCAIhBjD,GAKb,IAAMb,EC/DsB,SAACa,GAAD,MAAY,CAC1CZ,KHXyB,aGYzBY,SD6DiBkD,CAAiBlD,GAChChB,EAAMiD,SAAS9C,GACf4D,IAAQC,QAAQ,2BAAQ,O,GApELG,aELvBC,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,W","file":"static/js/main.8c86c1f4.chunk.js","sourcesContent":["import { CHANGE_INPUT, ADD_MENU, DELETE_MENU, GET_MENU } from './actionTypes.js' // 引入actionType\n\nconst defaultState = { // 默认数据\n  placeholderText: '请输入菜品名称',\n  menuList: ['啤酒鸭', '宫保鸡丁', '水煮肉片', '糖醋排骨']\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_INPUT:\n      let newState = JSON.parse(JSON.stringify(state)) // 深拷贝state\n      newState.inputValue = action.value\n      return newState\n    case ADD_MENU:\n      let newState2 = JSON.parse(JSON.stringify(state))\n      newState2.menuList.push({\n        name: newState2.inputValue\n      })\n      newState2.inputValue = ''\n      return newState2\n    case DELETE_MENU:\n      let newState3 = JSON.parse(JSON.stringify(state))\n      newState3.menuList.splice(action.index, 1)\n      return newState3\n    case GET_MENU:\n      let newState4 = JSON.parse(JSON.stringify(state))\n      newState4.menuList = action.data\n      return newState4\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux' // 引入createStore方法\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\n\n// 创建数据存储仓库\nconst store = createStore(\n  reducer,\n  enhancer\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // 配合Redux Dev Tools工具使用\n)\n\nexport default store","export const CHANGE_INPUT = 'changeInput'\nexport const ADD_MENU = 'addMenu'\nexport const DELETE_MENU = 'deleteMenu'\nexport const GET_MENU = 'getMenu'","import React from 'react'\nimport 'antd/dist/antd.css'\nimport { Input, Button, List, Tag } from 'antd'\n\nconst TodoListUi = (props) => {\n  return (\n    <div style={{ margin: 20 }}>\n      <Input\n        placeholder={props.placeholderText}\n        style={{ width: '250px' }}\n        onChange={props.changeInputValue}\n        onPressEnter={props.addMenuItem}\n        value={props.inputValue}\n      />\n      <Button type=\"primary\" onClick={props.addMenuItem} style={{ marginLeft: '5px' }}>添加</Button>\n      <List\n        header={<Tag color=\"processing\">start</Tag>}\n        footer={<Tag color=\"processing\">end</Tag>}\n        bordered\n        dataSource={props.menuList}\n        renderItem={(item, index) => (\n          <List.Item\n            actions={[\n              <Button\n                size=\"small\"\n                danger\n                onClick={\n                  () => { props.deleteMenuItem(index) }\n                }>\n                删除\n              </Button>\n            ]}>\n            {item.name}\n          </List.Item>\n        )}\n        style={{ marginTop: 20, width: 318 }}\n      />\n    </div>\n  )\n}\n\nexport default TodoListUi;","import React, { Component } from 'react'\nimport 'antd/dist/antd.css'\nimport { message } from 'antd'\nimport store from './store' // 引入redux的store数据\n// import { CHANGE_INPUT, ADD_MENU, DELETE_MENU } from './store/actionTypes.js' // 引入actionType\nimport { changeInputAction, addMenuAction, deleteMenuAction, getToDoList } from './store/actionCreators.js'\nimport TodoListUi from './TodoListUi.js'\n// import axios from 'axios'\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = store.getState()\n    // 更改绑定的this\n    this.changeInputValue = this.changeInputValue.bind(this)\n    this.storeChange = this.storeChange.bind(this)\n    this.addMenuItem = this.addMenuItem.bind(this)\n    this.deleteMenuItem = this.deleteMenuItem.bind(this)\n    // 订阅Redux状态，以便及时更新当前页面的state\n    store.subscribe(this.storeChange)\n  }\n  componentDidMount() {\n    // axios.get('http://rap2.taobao.org:38080/app/mock/247628/menuList').then(res => {\n    //   const action = getMenuAction(res.data.data)\n    //   store.dispatch(action)\n    // }).catch(err => {\n    //   console.log(err)\n    // })\n    const action = getToDoList()\n    store.dispatch(action)\n  }\n  render() {\n    return (\n      <TodoListUi\n        placeholderText={this.state.placeholderText}\n        inputValue={this.state.inputValue}\n        menuList={this.state.menuList}\n        changeInputValue={this.changeInputValue}\n        addMenuItem={this.addMenuItem}\n        deleteMenuItem={this.deleteMenuItem}\n      />\n    )\n  }\n  // 输入框的change事件\n  changeInputValue(e) {\n    // const action = {\n    //   type: CHANGE_INPUT,\n    //   value: e.target.value\n    // }\n    const action = changeInputAction(e.target.value)\n    store.dispatch(action) // 将action传递给store\n  }\n  // 更新当前页面组件内的数据\n  storeChange() {\n    this.setState(store.getState()) // 由于store更新，所以需要更新当前页面的state\n  }\n  // 添加菜品\n  addMenuItem() {\n    if (this.state.inputValue && this.state.inputValue.trim()) {\n      // const action = {\n      //   type: ADD_MENU\n      // }\n      const action = addMenuAction()\n      store.dispatch(action) // 将action传递给store\n      message.success('添加成功', 2)\n    } else {\n      message.warning('请输入菜品名称', 2)\n    }\n  }\n  // 删除菜品\n  deleteMenuItem(index) {\n    // const action = {\n    //   type: DELETE_MENU,\n    //   index\n    // }\n    const action = deleteMenuAction(index)\n    store.dispatch(action) // 将action传递给store\n    message.success('删除成功', 2)\n  }\n}\n\nexport default TodoList","import { CHANGE_INPUT, ADD_MENU, DELETE_MENU, GET_MENU } from './actionTypes.js' // 引入actionType\nimport axios from 'axios'\n\nexport const changeInputAction = (value) => ({\n  type: CHANGE_INPUT,\n  value\n})\n\nexport const addMenuAction = () => ({\n  type: ADD_MENU\n})\n\nexport const deleteMenuAction = (index) => ({\n  type: DELETE_MENU,\n  index\n})\n\nexport const getMenuAction = (data) => ({\n  type: GET_MENU,\n  data\n})\n\nexport const getToDoList = () => {\n  return (dispatch) => {\n    axios.get('http://rap2.taobao.org:38080/app/mock/247628/menuList').then(res => {\n      const action = getMenuAction(res.data.data)\n      dispatch(action)\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList.js'\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n"],"sourceRoot":""}